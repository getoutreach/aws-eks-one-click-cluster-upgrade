{
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
        "name": "coredns",
        "namespace": "kube-system",
        "labels": {
            "k8s-app": "kube-dns",
            "kubernetes.io/name": "CoreDNS",
            "eks.amazonaws.com/component": "coredns",
            "k8s-addon": "coredns.addons.k8s.io",
            "kubernetes.io/cluster-service": "true"
        }
    },
    "spec": {
        "replicas": 2,
        "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
                "maxUnavailable": 1
            }
        },
        "selector": {
            "matchLabels": {
                "k8s-app": "kube-dns",
                "eks.amazonaws.com/component": "coredns"
            }
        },
        "template": {
            "metadata": {
                "labels": {
                    "k8s-app": "kube-dns",
                    "eks.amazonaws.com/component": "coredns"
                },
                "annotations": {
                    "eks.amazonaws.com/compute-type": "ec2",
                    "ad.datadoghq.com/coredns.check_names": [
                        "coredns"
                    ],
                    "ad.datadoghq.com/coredns.init_configs": [
                        {}
                    ],
                    "ad.datadoghq.com/coredns.instances": [
                        {
                            "prometheus_url": "http://%%host%%:9153/metrics",
                            "namespace": "coredns",
                            "metrics": [
                                "*"
                            ]
                        }
                    ]
                },
                "spec": {
                    "serviceAccountName": "coredns",
                    "priorityClassName": "system-cluster-critical",
                    "affinity": {
                        "nodeAffinity": {
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                    {
                                        "matchExpressions": [
                                            {
                                                "key": "beta.kubernetes.io/os",
                                                "operator": "In",
                                                "values": [
                                                    "linux"
                                                ]
                                            },
                                            {
                                                "key": "beta.kubernetes.io/arch",
                                                "operator": "In",
                                                "values": [
                                                    "amd64",
                                                    "arm64"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": [
                                {
                                    "podAffinityTerm": {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "k8s-app",
                                                    "operator": "In",
                                                    "values": [
                                                        "kube-dns"
                                                    ]
                                                }
                                            ]
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    },
                                    "weight": 100
                                }
                            ]
                        }
                    },
                    "tolerations": [
                        {
                            "key": "node-role.kubernetes.io/master",
                            "effect": "NoSchedule"
                        },
                        {
                            "key": "CriticalAddonsOnly",
                            "operator": "Exists"
                        }
                    ],
                    "containers": [
                        {
                            "name": "coredns",
                            "image": "gcr.io/outreach-docker/eks/coredns:v1.8.4-eksbuild.1",
                            "imagePullPolicy": "IfNotPresent",
                            "resources": {
                                "limits": {
                                    "memory": "500Mi",
                                    "cpu": "200m"
                                },
                                "requests": {
                                    "cpu": "100m",
                                    "memory": "200Mi"
                                }
                            },
                            "args": [
                                "-conf",
                                "/etc/coredns/Corefile"
                            ],
                            "volumeMounts": [
                                {
                                    "name": "config-volume",
                                    "mountPath": "/etc/coredns",
                                    "readOnly": true
                                },
                                {
                                    "name": "tmp",
                                    "mountPath": "/tmp"
                                }
                            ],
                            "ports": [
                                {
                                    "containerPort": 53,
                                    "name": "dns",
                                    "protocol": "UDP"
                                },
                                {
                                    "containerPort": 53,
                                    "name": "dns-tcp",
                                    "protocol": "TCP"
                                },
                                {
                                    "containerPort": 9153,
                                    "name": "metrics",
                                    "protocol": "TCP"
                                }
                            ],
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/health",
                                    "port": 8080,
                                    "scheme": "HTTP"
                                },
                                "initialDelaySeconds": 60,
                                "timeoutSeconds": 5,
                                "successThreshold": 1,
                                "failureThreshold": 5
                            },
                            "readinessProbe": {
                                "httpGet": {
                                    "path": "/health",
                                    "port": 8080,
                                    "scheme": "HTTP"
                                }
                            },
                            "securityContext": {
                                "allowPrivilegeEscalation": false,
                                "capabilities": {
                                    "add": [
                                        "NET_BIND_SERVICE"
                                    ],
                                    "drop": [
                                        "all"
                                    ]
                                },
                                "readOnlyRootFilesystem": true
                            }
                        }
                    ],
                    "dnsPolicy": "Default",
                    "volumes": [
                        {
                            "name": "tmp",
                            "emptyDir": {}
                        },
                        {
                            "name": "config-volume",
                            "configMap": {
                                "name": "coredns",
                                "items": [
                                    {
                                        "key": "Corefile",
                                        "path": "Corefile"
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        }
    }